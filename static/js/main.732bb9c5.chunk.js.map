{"version":3,"sources":["Redux/Actions/Actions.js","Components/Header.js","Components/Home.js","App.js","reportWebVitals.js","Redux/Reducers/ProductReducer.js","Redux/Reducers/FiterReducer.js","Redux/Reducers/CombineReducers.js","index.js"],"names":["PRODUCTS","VIEWPRODUCTS","getProducts","data","type","payload","filterProducts","Header","state","os","memory","storage","price","ioscount","androidcount","memory4","memory8","memory12","count64","count128","count264","applyFilter","props","products","filter","p","osfilter","memoryfilter","storagefilter","pricefilter","length","includes","map","pr","Number","changeOS","event","target","name","checked","push","o","setState","changeMemory","m","changeStorage","s","changePrice","this","className","Dropdown","Toggle","Menu","Item","onChange","id","Component","connect","store","fproducts","dispatch","bindActionCreators","url","Home","getProductData","axios","get","then","res","console","log","catch","error","finally","Table","striped","bordered","hover","Object","keys","heading","i","toUpperCase","product","brand","stock","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultstate","combineReducers","action","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.732bb9c5.chunk.js","sourcesContent":["export const PRODUCTS = \"PRODUCTS\"\r\nexport const VIEWPRODUCTS = \"VIEWPRODUCTS\"\r\n\r\nexport const getProducts = data => {\r\n    return{\r\n        type: PRODUCTS,\r\n        payload: data\r\n    }\r\n}\r\nexport const filterProducts = data => {\r\n    return{\r\n        type: VIEWPRODUCTS,\r\n        payload: data\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { Dropdown } from \"react-bootstrap\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { connect } from \"react-redux\"\r\nimport { getProducts, filterProducts } from \"../Redux/Actions/Actions\"\r\nimport \"../Styles/header.css\"\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        os: [],\r\n        memory: [],\r\n        storage: [],\r\n        price:[],        \r\n        ioscount: 0,\r\n        androidcount: 0,\r\n        memory4: 0,\r\n        memory8: 0,\r\n        memory12: 0,\r\n        count64: 0,\r\n        count128: 0,\r\n        count264: 0\r\n    }\r\n\r\n    applyFilter = () => {\r\n        let { os,memory,storage,price } = this.state\r\n        let { products, filterProducts } = this.props\r\n        \r\n        products = products.filter(p => {\r\n            let osfilter = true, memoryfilter = true, storagefilter=true, pricefilter=true\r\n            if(os.length){\r\n                osfilter = os.includes(p.os)\r\n            }\r\n            \r\n            if(memory.length){\r\n                memoryfilter = memory.includes(p.memory)\r\n            }\r\n\r\n            if(storage.length){\r\n                storagefilter = storage.includes(p.storage)\r\n            }\r\n            if(price.length){\r\n                pricefilter = false\r\n                price.map(pr => {\r\n                    if(pr == \"10k\"){\r\n                        pricefilter = Number(p.price) > 0 && Number(p.price <= 10000)\r\n                    }\r\n                    else if(pr == \"20k\"){\r\n                        pricefilter = Number(p.price) > 10000 && Number(p.price <= 20000)\r\n                    }\r\n                    else if(pr == \"50k\"){\r\n                        pricefilter = Number(p.price) > 20000 && Number(p.price <= 50000)\r\n                    } \r\n                    else if(pr == \"1l\") {\r\n                        pricefilter = Number(p.price) > 50000 && Number(p.price <= 100000)\r\n                    } \r\n                    else{\r\n                        pricefilter = Number(p.price) > 100000\r\n                    }                 \r\n                })\r\n            }\r\n            \r\n            return osfilter && memoryfilter && storagefilter && pricefilter\r\n        })\r\n        \r\n        filterProducts(products)\r\n    }\r\n\r\n    changeOS = (event) => {    \r\n        const {name,checked} = event.target \r\n        let {os} = this.state\r\n                   \r\n        if(checked){\r\n            os.push(name)\r\n        }\r\n        else\r\n            os = os.filter(o => o != name)\r\n        this.setState({os: [...os] },this.applyFilter)\r\n        \r\n    }\r\n    changeMemory = (event) => {\r\n        const {name,checked} = event.target   \r\n        let {memory} = this.state         \r\n        \r\n        if(checked){\r\n            memory.push(name)\r\n        }\r\n        else\r\n            memory = memory.filter(m => m != name)\r\n        this.setState({memory: [...memory] },this.applyFilter)        \r\n    }\r\n    changeStorage = (event) => {\r\n        const {name,checked} = event.target    \r\n        let {storage} = this.state        \r\n\r\n        if(checked){\r\n            storage.push(name)\r\n        }\r\n        else\r\n            storage = storage.filter(s => s != name)\r\n        this.setState({storage: [...storage] },this.applyFilter) \r\n    }\r\n    changePrice = event => {\r\n        const {name,checked} = event.target  \r\n        let {price} = this.state  \r\n        \r\n        if(checked){\r\n            price.push(name)\r\n        }\r\n        else\r\n            price = price.filter(p => p != name)\r\n        this.setState({price: [...price] },this.applyFilter)\r\n    }\r\n    static getDerivedStateFromProps(props,state) {\r\n        let { ioscount, androidcount, memory4, memory8, memory12, count64, count128, count264 } = state\r\n        ioscount = 0 \r\n        androidcount = 0\r\n        memory4 = 0 \r\n        memory8 = 0\r\n        memory12 = 0 \r\n        count64 = 0\r\n        count128 = 0\r\n        count264 = 0\r\n\r\n        props.products.map(p => {\r\n            if (p.os == \"IOS\")\r\n                ioscount++\r\n            else\r\n                androidcount++\r\n            if (p.memory == \"4\")\r\n                memory4++\r\n            else if (p.memory == \"8\")\r\n                memory8++\r\n            else\r\n                memory12++\r\n            if (p.storage == \"64\")\r\n                count64++\r\n            else if (p.storage == \"128\")\r\n                count128++\r\n            else\r\n                count264++\r\n        })\r\n        return { \r\n            ioscount, androidcount, memory4, memory8, memory12, count64, count128, count264 \r\n        }\r\n    }\r\n    render() {\r\n        const { os,memory,storage,price, ioscount, androidcount, memory4, memory8, memory12, count64, count128, count264 } = this.state        \r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"headbox\">\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle >\r\n                            OS\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu key={`os-${os.length}`}>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"IOS\"\r\n                                    checked={os.includes(\"IOS\")}\r\n                                    onChange={this.changeOS} />{`IOS (${ioscount || 0})`}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"ANDROID\"\r\n                                    checked={os.includes(\"ANDROID\")}\r\n                                    onChange={this.changeOS} />{`ANDROID (${androidcount || 0})`}\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle id=\"dropdown-basic\">\r\n                            Memory\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu key={`memory-${memory.length}`}>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"4\"\r\n                                    checked={memory.includes(\"4\")}\r\n                                    onChange={this.changeMemory} />{`4 GB (${memory4 || 0})`}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"8\"\r\n                                    checked={memory.includes(\"8\")}\r\n                                    onChange={this.changeMemory} />{`8 GB (${memory8 || 0})`}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"12\"\r\n                                    checked={memory.includes(\"12\")}\r\n                                    onChange={this.changeMemory} />{`12 GB (${memory12 || 0})`}\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>                    \r\n                    </Dropdown>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle id=\"dropdown-basic\">\r\n                            Storage\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu key={`storage-${storage.length}`}>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"64\"\r\n                                    checked={storage.includes(\"64\")}\r\n                                    onChange={this.changeStorage} />{`64 GB (${count64 || 0})`}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"128\"\r\n                                    checked={storage.includes(\"128\")}\r\n                                    onChange={this.changeStorage} />{`128 GB (${count128 || 0})`}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"264\"\r\n                                    checked={storage.includes(\"264\")}\r\n                                    onChange={this.changeStorage} />{`264 GB (${count264 || 0})`}\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>                        \r\n                    </Dropdown>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle id=\"dropdown-basic\">\r\n                            Price Range\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu key={`price-${price.length}`}>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"10k\"\r\n                                    checked={price.includes(\"10k\")}\r\n                                    onChange={this.changePrice} />0-10000\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"20k\"\r\n                                    checked={price.includes(\"20k\")}\r\n                                    onChange={this.changePrice} />10001-20000\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"50k\"\r\n                                    checked={price.includes(\"50k\")}\r\n                                    onChange={this.changePrice} />20001-50000\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"1l\"\r\n                                    checked={price.includes(\"1l\")}\r\n                                    onChange={this.changePrice} />50000-100000\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"abve1l\"\r\n                                    checked={price.includes(\"abve1l\")}\r\n                                    onChange={this.changePrice} />{`>100000`}\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>                        \r\n                    </Dropdown>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        products: store.products,\r\n        fproducts: store.fproducts\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        getProducts, filterProducts\r\n    }, dispatch)\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\nimport { getProducts,filterProducts } from \"../Redux/Actions/Actions\"\r\nimport { Table } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport Header from \"./Header\"\r\nimport \"../Styles/home.css\"\r\n\r\nconst url = \"https://run.mocky.io/v3/08c9d634-5deb-486a-b85e-0ac8c530074d\"\r\nclass Home extends Component {\r\n    state = {\r\n\r\n    }\r\n    getProductData = () => {\r\n        axios.get(url)\r\n            .then((res) => {\r\n                // handle success                \r\n                this.props.getProducts(res.data)\r\n                this.props.filterProducts(res.data)\r\n                console.log(\"products\", this.props.products)\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n                // always executed\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        this.getProductData()        \r\n    }\r\n    render() {\r\n        const { products, fproducts } = this.props        \r\n        return (\r\n            <div className=\"homecontainer\">\r\n                <div className=\"hbox\">\r\n                    <Header />\r\n                </div>\r\n                <div className=\"tableview\">\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                {(products[0] && Object.keys(products[0]))\r\n                                    && Object.keys(products[0]).map((heading, i) => {\r\n                                        return (\r\n                                            <th key={i}>\r\n                                                {heading.toUpperCase()}\r\n                                            </th>\r\n                                        )\r\n                                    })}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {fproducts.map((product, i) => {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        <td>{product.id}</td>\r\n                                        <td>{product.brand}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.os}</td>\r\n                                        <td>{product.memory}</td>\r\n                                        <td>{product.storage}</td>\r\n                                        <td>{product.price}</td>\r\n                                        <td>{product.stock}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        products: store.products,\r\n        fproducts: store.fproducts\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        getProducts,filterProducts\r\n    }, dispatch)\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import './App.css';\nimport Home from \"./Components/Home\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {PRODUCTS} from \"../Actions/Actions\"\r\n\r\nconst defaultstate=[]\r\nexport default function ProductReducer(state=defaultstate,action){\r\n    switch(action.type){\r\n        case PRODUCTS: {\r\n            state = action.payload\r\n            return state\r\n        }        \r\n        default: return state\r\n    }\r\n}","import {VIEWPRODUCTS} from \"../Actions/Actions\"\r\n\r\nconst defaultstate=[]\r\nexport default function FilterReducer(state=defaultstate,action){\r\n    switch(action.type){\r\n        case VIEWPRODUCTS: {\r\n            state = [...action.payload]            \r\n            return state\r\n        }        \r\n        default: return state\r\n    }\r\n}","import { combineReducers } from \"redux\"\r\nimport products from \"./ProductReducer\"\r\nimport fproducts from \"./FiterReducer\"\r\n\r\nexport default combineReducers({\r\n    products: products,\r\n    fproducts: fproducts\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from \"./Redux/Reducers/CombineReducers\"\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}